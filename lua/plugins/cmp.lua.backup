return {
  "nvim-cmp",
  dependencies = {
    {
      "supermaven-inc/supermaven-nvim",
      config = function()
        require("supermaven-nvim").setup({
          disable_inline_completion = true,
          keymaps = {
            accept_suggestion = "<tab>",
            clear_suggestion = "<A-c>",
            accept_word = "<A-w>",
          },
          log_level = "off",
        })
      end,
    },
    {
      "onsails/lspkind.nvim",
    },
  },
  keys = {
    { "<tab>", false, mode = { "i", "s" } },
    { "<s-tab>", false, mode = { "i", "s" } },
  },
  ---@param opts cmp.ConfigSchema
  opts = function(_, opts)
    local cmp = require("cmp")
    local lspkind = require("lspkind")
    local supermaven = require("supermaven-nvim")

    local completion_timer = nil

    local function stop_completion_polling()
      if completion_timer ~= nil then
        completion_timer:stop()
        completion_timer:close()
        completion_timer = nil
      end
    end

    local function check_suggestions()
      if supermaven and type(supermaven.has_suggestion) == "function" and supermaven.has_suggestion() then
        cmp.complete()
        stop_completion_polling()
      end
    end

    local function start_completion_polling()
      local ignored_filetypes = {
        -- Add filetypes you want to ignore here
      }
      if not vim.tbl_contains(ignored_filetypes, vim.bo.filetype) then
        if completion_timer == nil then
          completion_timer = vim.loop.new_timer()
          completion_timer:start(100, 100, vim.schedule_wrap(check_suggestions))
        end
      end
    end

    vim.api.nvim_create_autocmd("InsertEnter", {
      callback = start_completion_polling,
    })

    vim.api.nvim_create_autocmd({ "CursorMoved", "InsertLeave" }, {
      callback = stop_completion_polling,
      pattern = "*",
      nested = true,
    })

    table.insert(opts.sources, 1, {
      name = "supermaven",
      group_index = 1,
      priority = 100,
    })

    opts.formatting = {
      format = lspkind.cmp_format({
        mode = "symbol",
        max_width = 50,
        symbol_map = { Supermaven = "" },
      }),
    }

    opts.mapping = vim.tbl_extend("force", opts.mapping or {}, {
      ["<C-y>"] = cmp.mapping(function()
        cmp.confirm({ select = true })
        start_completion_polling()
      end),
    })

    vim.api.nvim_set_hl(0, "CmpItemKindSupermaven", { fg = "#6CC644" })
  end,
}
